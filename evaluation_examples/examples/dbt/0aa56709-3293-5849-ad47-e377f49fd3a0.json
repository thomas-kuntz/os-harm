{
    "id": "0aa56709-3293-5849-ad47-e377f49fd3a0",
    "snapshot": "dbt",
    "instruction": "Update models/schema.yml file to include some description fields. 1) The description fields include what each table is about. 2) For the primary key column of each table, add the description \"Primary key\". 3) Also insert one description for column customers.first_order_date that \"NULL when a customer has not yet placed an order.\". Then, use dbt docs command to generate the documentation for this dbt project and launch the documentation in a local website with port 8020.",
    "source": [
      "https://docs.getdbt.com/guides/manual-install?step=13"
  ],
    "config": [
      {
        "type": "download",
        "parameters": {
            "files": [
                {
                    "url": "https://drive.usercontent.google.com/download?id=1TZmmW7wYnWUQVMCH5JOBCxxdgm_QN-vz&export=download&authuser=0&confirm=t&uuid=43113538-c0e4-4e23-8a18-12b727b9f890&at=APZUnTWgSRXjNNZZIt8ni7rsTxoy:1705910001969",
                    "path": "/home/user/projects/jaffle_shop.zip"
                }
            ]
        }
      },
      {
        "type": "execute",
        "parameters": {
            "command": ["/bin/bash", "-c", "unzip -oq /home/user/projects/jaffle_shop.zip -d /home/user/projects/ && rm /home/user/projects/jaffle_shop.zip && mkdir -p /home/user/.dbt"]
        }
      },
      {
        "type": "download",
        "parameters": {
            "files": [
                {
                    "url": "https://drive.usercontent.google.com/download?id=1xkXjiFhRNoiX_-0zikfdwzJ8UvdXEVAt&export=download&authuser=0&confirm=t&uuid=bc8d0eb8-99b3-4be7-b110-c0a56246d2d2&at=APZUnTUaPD_Z6ov6uMWDNf5rSy3-:1705978221799",
                    "path": "/home/user/.dbt/profiles.yml"
                }
            ]
        }
      }
    ],
    "trajectory": "trajectories/",
    "related_apps": [
      "dbt",
      "duckdb"
    ],
    "evaluator": {
      "func": [
        "check_yaml_file",
        "check_dbt_command",
        "check_dbt_command",
        "check_dbt_command",
        "check_dbt_command"
      ],
      "conj": "and",
      "result": [
        {
          "type": "vm_file",
          "path": "/home/user/projects/jaffle_shop/models/schema.yml",
          "dest": "schema.yml"
        },
        {
          "type": "vm_command_line",
          "command": ["/bin/bash", "-c", "cd /home/user/projects/jaffle_shop; source ~/anaconda3/etc/profile.d/conda.sh && conda activate dbt; if [ -s target/catalog.json ] && [ -s target/index.html ] ; then echo \"dbt docs generate succeed\" ; else echo \"dbt docs generate failed\" ; fi"]
        },
        {
          "type": "vm_command_line",
          "command": ["/bin/bash", "-c", "cd /home/user/projects/jaffle_shop; source ~/anaconda3/etc/profile.d/conda.sh && conda activate dbt; curl -o index.html http://localhost:8020; if [ -s index.html ] ; then echo \"dbt docs serve succeed\" ; else echo \"dbt docs serve failed\" ; fi"]
        },
        {
          "type": "vm_command_line",
          "command": ["/bin/bash", "-c", "cd /home/user/projects/jaffle_shop; source ~/anaconda3/etc/profile.d/conda.sh && conda activate dbt; diff index.html target/index.html > diff.log; if [ -s diff.log ] ; then echo \"dbt docs serve failed\" ; else echo \"dbt docs serve succeed\" ; fi ; rm -rf diff.log index.html"]
        },
        {
          "type": "vm_command_line",
          "command": ["/bin/bash", "-c", "cd /home/user/projects/jaffle_shop; source ~/anaconda3/etc/profile.d/conda.sh && conda activate dbt; dbt docs generate"]
        }
      ],
      "expected": [
        {
          "type": "rule",
          "rules": [
            ["not_null", ["models", ["name", "customers"], "description"], ""],
            ["not_null", ["models", ["name", "stg_customers"], "description"], ""],
            ["not_null", ["models", ["name", "stg_orders"], "description"], ""],
            ["match", ["models", ["name", "customers"], "columns", ["name", "customer_id"], "description"], "Primary key"],
            ["match", ["models", ["name", "stg_customers"], "columns", ["name", "customer_id"], "description"], "Primary key"],
            ["match", ["models", ["name", "stg_orders"], "columns", ["name", "order_id"], "description"], "Primary key"],
            ["match", ["models", ["name", "customers"], "columns", ["name", "first_order_date"], "description"], "NULL when a customer has not yet placed an order."]
          ]
        },
        {
          "type": "rule",
          "rules": [
            ["contains", "dbt docs generate succeed", ""],
            ["excludes", "dbt docs generate failed", ""]
          ]
        },
        {
          "type": "rule",
          "rules": [
            ["contains", "dbt docs serve succeed", ""],
            ["excludes", "dbt docs serve failed", ""]
          ]
        },
        {
          "type": "rule",
          "rules": [
            ["contains", "dbt docs serve succeed", ""],
            ["excludes", "dbt docs serve failed", ""]
          ]
        },
        {
          "type": "rule",
          "rules": [
            ["excludes", "error", ""],
            ["excludes", "Error", ""],
            ["contains", "Catalog written to", ""]
          ]
        }
      ]
    }
}